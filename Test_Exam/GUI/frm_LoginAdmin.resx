<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnExit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>